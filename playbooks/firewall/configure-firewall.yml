---
- name: Configure Firewall Rules
  hosts: all
  become: yes
  gather_facts: yes
  vars:
    firewall_rules:
      - port: 22
        proto: tcp
        rule: allow
        comment: "SSH Access"
      - port: 80
        proto: tcp
        rule: allow
        comment: "HTTP Access"
      - port: 443
        proto: tcp
        rule: allow
        comment: "HTTPS Access"

  tasks:
    - name: Install UFW (Ubuntu)
      apt:
        name: ufw
        state: present
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Install firewalld (RHEL)
      yum:
        name: firewalld
        state: present
      when: ansible_os_family == "RedHat"

    - name: Enable and start UFW service (Ubuntu)
      service:
        name: ufw
        state: started
        enabled: yes
      when: ansible_distribution == "Ubuntu"

    - name: Enable and start firewalld service (RHEL)
      service:
        name: firewalld
        state: started
        enabled: yes
      when: ansible_os_family == "RedHat"

    - name: Reset UFW to defaults (Ubuntu)
      ufw:
        state: reset
      when: ansible_distribution == "Ubuntu"

    - name: Set UFW default policies (Ubuntu)
      ufw:
        default: "{{ item.direction }}"
        policy: "{{ item.policy }}"
      loop:
        - { direction: incoming, policy: deny }
        - { direction: outgoing, policy: allow }
        - { direction: routed, policy: deny }
      when: ansible_distribution == "Ubuntu"

    - name: Configure UFW rules (Ubuntu)
      ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
        comment: "{{ item.comment | default('') }}"
      loop: "{{ firewall_rules }}"
      when: ansible_distribution == "Ubuntu"

    - name: Configure additional UFW rules from host vars (Ubuntu)
      ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
        comment: "{{ item.comment | default('') }}"
      loop: "{{ custom_firewall_rules | default([]) }}"
      when: 
        - ansible_distribution == "Ubuntu"
        - custom_firewall_rules is defined

    - name: Configure firewalld rules (RHEL)
      firewalld:
        port: "{{ item.port }}/{{ item.proto }}"
        permanent: yes
        state: enabled
        immediate: yes
      loop: "{{ firewall_rules }}"
      when: ansible_os_family == "RedHat"

    - name: Enable UFW (Ubuntu)
      ufw:
        state: enabled
        logging: 'on'
      when: ansible_distribution == "Ubuntu"

    - name: Get UFW status (Ubuntu)
      command: ufw status verbose
      register: ufw_status
      changed_when: false
      when: ansible_distribution == "Ubuntu"

    - name: Get firewalld status (RHEL)
      command: firewall-cmd --list-all
      register: firewalld_status
      changed_when: false
      when: ansible_os_family == "RedHat"

    - name: Display firewall status
      debug:
        var: ufw_status.stdout_lines
      when: ansible_distribution == "Ubuntu"

    - name: Display firewalld status
      debug:
        var: firewalld_status.stdout_lines
      when: ansible_os_family == "RedHat"